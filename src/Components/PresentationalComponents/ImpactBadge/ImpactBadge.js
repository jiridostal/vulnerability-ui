import { QuestionIcon, SecurityIcon } from '@patternfly/react-icons';
import propTypes from 'prop-types';
import React from 'react';

class ImpactBadge extends React.Component {
    constructor(props) {
        super(props);
    }

    // componentWillUnmount() {
    //     this.props.emptyStore();
    // }

    getBadgeColorByImpact(impact) {
        let icon;
        switch (impact) {
            case 'High':
            case 'Important':
                icon = <SecurityIcon size="md" color="#ec7a08" />;
                break;
            case 'Medium':
            case 'Moderate':
                icon = <SecurityIcon size="md" color="var(--pf-global--warning-color--100)" />;
                break;
            case 'Critical':
                icon = <SecurityIcon size="md" color="var(--pf-global--danger-color--100)" />;
                break;
            case 'Low':
                icon = <SecurityIcon size="md" color="var(--pf-global--Color--200)" />;
                break;
            default:
                icon = <QuestionIcon size="md" color="var(--pf-global--Color--200)" />;
        }

        return <span>{icon}</span>;
    }

    render() {
        return (
            <React.Fragment>
                {this.getBadgeColorByImpact(this.props.impact)}
            </React.Fragment>
        );
    }
}

ImpactBadge.propTypes = {
    impact: propTypes.string
};

export default ImpactBadge;
